# docker-compose.yml - DEVELOPMENT ENVIRONMENT
# For production, use: docker-compose -f docker-compose.prod.yml up

version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:14
    container_name: samaanai-postgres-dev
    environment:
      POSTGRES_DB: ${POSTGRES_DB:-samaanai}
      POSTGRES_USER: ${POSTGRES_USER:-postgres}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-password}
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - samaanai-network

  # Express.js Backend API
  backend:
    build:
      context: ./backend-express
      dockerfile: Dockerfile.dev
    container_name: samaanai-backend-dev
    env_file:
      - .env.development
    environment:
      # Override with Docker-specific values
      DATABASE_URL: postgresql://${POSTGRES_USER:-postgres}:${POSTGRES_PASSWORD:-password}@postgres:5432/${POSTGRES_DB:-samaanai}
      NODE_ENV: development
      PORT: 8080
    ports:
      - "8080:8080"
    volumes:
      - ./backend-express/src:/app/src
      - ./backend-express/prisma:/app/prisma
      - backend_node_modules:/app/node_modules
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - samaanai-network
    command: npm run dev

  # React Native Web Frontend
  frontend:
    build:
      context: ./samaanai-mobile
      dockerfile: Dockerfile.dev
    container_name: samaanai-frontend-dev
    env_file:
      - .env.development
    environment:
      # Override with Docker-specific values
      API_BASE_URL: http://localhost:8080
      NODE_ENV: development
      EXPO_DEVTOOLS_LISTEN_ADDRESS: 0.0.0.0
      REACT_NATIVE_PACKAGER_HOSTNAME: 0.0.0.0
    ports:
      - "19006:19006"
      - "8081:8081"
    volumes:
      - ./samaanai-mobile/src:/app/src
      - ./samaanai-mobile/App.js:/app/App.js
      - ./samaanai-mobile/app.json:/app/app.json
      - frontend_node_modules:/app/node_modules
    depends_on:
      - backend
    networks:
      - samaanai-network
    stdin_open: true
    tty: true
    command: npm run web

volumes:
  postgres_data:
    driver: local
  backend_node_modules:
    driver: local
  frontend_node_modules:
    driver: local

networks:
  samaanai-network:
    driver: bridge