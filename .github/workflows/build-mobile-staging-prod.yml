name: Build Mobile Apps (Staging & Production)

on:
  push:
    branches:
      - staging
      - main
    paths:
      - 'samaanai-mobile/**'
      - '.github/workflows/build-mobile-staging-prod.yml'
  workflow_dispatch:
    inputs:
      platform:
        description: 'Platform to build'
        required: true
        type: choice
        options:
          - android
          - ios
          - all
        default: 'android'
      profile:
        description: 'Build profile'
        required: true
        type: choice
        options:
          - staging
          - production
        default: 'staging'

jobs:
  determine-build:
    name: Determine Build Configuration
    runs-on: ubuntu-latest
    outputs:
      profile: ${{ steps.config.outputs.profile }}
      should-build-android: ${{ steps.config.outputs.should_build_android }}
      should-build-ios: ${{ steps.config.outputs.should_build_ios }}
    steps:
      - name: Set build configuration
        id: config
        run: |
          if [ "${{ github.event_name }}" == "workflow_dispatch" ]; then
            echo "profile=${{ github.event.inputs.profile }}" >> $GITHUB_OUTPUT

            if [ "${{ github.event.inputs.platform }}" == "android" ] || [ "${{ github.event.inputs.platform }}" == "all" ]; then
              echo "should_build_android=true" >> $GITHUB_OUTPUT
            else
              echo "should_build_android=false" >> $GITHUB_OUTPUT
            fi

            if [ "${{ github.event.inputs.platform }}" == "ios" ] || [ "${{ github.event.inputs.platform }}" == "all" ]; then
              echo "should_build_ios=true" >> $GITHUB_OUTPUT
            else
              echo "should_build_ios=false" >> $GITHUB_OUTPUT
            fi
          else
            # Auto-triggered by push
            if [ "${{ github.ref }}" == "refs/heads/main" ]; then
              echo "profile=production" >> $GITHUB_OUTPUT
            else
              echo "profile=staging" >> $GITHUB_OUTPUT
            fi

            # Build both platforms on push
            echo "should_build_android=true" >> $GITHUB_OUTPUT
            echo "should_build_ios=true" >> $GITHUB_OUTPUT
          fi

  build-android:
    name: Build Android APK
    needs: determine-build
    if: needs.determine-build.outputs.should-build-android == 'true'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
          cache-dependency-path: samaanai-mobile/package-lock.json

      - name: Setup Java
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Setup Android SDK
        uses: android-actions/setup-android@v3

      - name: Install dependencies
        working-directory: samaanai-mobile
        run: npm ci

      - name: Generate native Android project
        working-directory: samaanai-mobile
        run: |
          echo "🔧 Generating native Android project with expo prebuild"
          npx expo prebuild --platform android --clean

      - name: Make gradlew executable
        working-directory: samaanai-mobile/android
        run: chmod +x gradlew

      - name: Build Android APK
        working-directory: samaanai-mobile/android
        run: |
          echo "🏗️ Building Android APK for ${{ needs.determine-build.outputs.profile }} environment"
          # Build debug APK (no signing required)
          ./gradlew assembleDebug --no-daemon

      - name: Upload APK
        uses: actions/upload-artifact@v4
        with:
          name: android-apk-${{ needs.determine-build.outputs.profile }}-${{ github.sha }}
          path: samaanai-mobile/android/app/build/outputs/apk/debug/app-debug.apk
          retention-days: 30

      - name: Get APK info
        id: apk-info
        run: |
          APK_PATH="samaanai-mobile/android/app/build/outputs/apk/debug/app-debug.apk"
          APK_SIZE=$(du -h "$APK_PATH" | cut -f1)
          echo "apk_size=$APK_SIZE" >> $GITHUB_OUTPUT
          echo "✅ Android APK built successfully (Debug build)"
          echo "📦 APK Size: $APK_SIZE"
          echo "📱 Download from Actions artifacts"
          echo "⚠️  Note: This is a debug build for testing. For production, use a signed release build."

      - name: Comment on PR with build info
        if: github.event_name == 'pull_request'
        uses: actions/github-script@v7
        with:
          script: |
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: `## 📱 Android APK Built Successfully\n\n**Profile:** ${{ needs.determine-build.outputs.profile }}\n**Size:** ${{ steps.apk-info.outputs.apk_size }}\n\nDownload the APK from the [Actions artifacts](https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }})`
            })

  build-ios:
    name: Build iOS Simulator
    needs: determine-build
    if: needs.determine-build.outputs.should-build-ios == 'true' && needs.determine-build.outputs.profile == 'staging'
    runs-on: macos-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
          cache-dependency-path: samaanai-mobile/package-lock.json

      - name: Install dependencies
        working-directory: samaanai-mobile
        run: npm ci

      - name: Generate native iOS project
        working-directory: samaanai-mobile
        run: |
          echo "🔧 Generating native iOS project with expo prebuild"
          npx expo prebuild --platform ios --clean

      - name: Install CocoaPods dependencies
        working-directory: samaanai-mobile/ios
        run: pod install

      - name: Build iOS app
        working-directory: samaanai-mobile/ios
        run: |
          echo "🏗️ Building iOS app for ${{ needs.determine-build.outputs.profile }} environment"
          xcodebuild -workspace samaanaimobile.xcworkspace -scheme samaanaimobile -configuration Release -sdk iphonesimulator -derivedDataPath build

      - name: Upload iOS app
        uses: actions/upload-artifact@v4
        with:
          name: ios-app-${{ needs.determine-build.outputs.profile }}-${{ github.sha }}
          path: samaanai-mobile/ios/build/Build/Products/Release-iphonesimulator/samaanaimobile.app
          retention-days: 30

  notify-completion:
    name: Notify Build Completion
    needs: [determine-build, build-android, build-ios]
    if: always()
    runs-on: ubuntu-latest
    steps:
      - name: Build Summary
        run: |
          echo "## 📱 Mobile Build Summary" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "**Environment:** ${{ needs.determine-build.outputs.profile }}" >> $GITHUB_STEP_SUMMARY
          echo "**Trigger:** ${{ github.event_name }}" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY

          if [ "${{ needs.build-android.result }}" == "success" ]; then
            echo "✅ Android build submitted successfully" >> $GITHUB_STEP_SUMMARY
          elif [ "${{ needs.build-android.result }}" == "failure" ]; then
            echo "❌ Android build failed" >> $GITHUB_STEP_SUMMARY
          fi

          if [ "${{ needs.build-ios.result }}" == "success" ]; then
            echo "✅ iOS build submitted successfully" >> $GITHUB_STEP_SUMMARY
          elif [ "${{ needs.build-ios.result }}" == "failure" ]; then
            echo "❌ iOS build failed" >> $GITHUB_STEP_SUMMARY
          fi

          echo "" >> $GITHUB_STEP_SUMMARY
          echo "🔗 Check build status on [Expo Dashboard](https://expo.dev)" >> $GITHUB_STEP_SUMMARY
